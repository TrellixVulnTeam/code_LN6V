
a.out：     文件格式 elf64-x86-64


Disassembly of section .init:

00000000004010b0 <_init>:
  4010b0:	48 83 ec 08          	sub    $0x8,%rsp
  4010b4:	48 8b 05 3d 1f 20 00 	mov    0x201f3d(%rip),%rax        # 602ff8 <__gmon_start__>
  4010bb:	48 85 c0             	test   %rax,%rax
  4010be:	74 05                	je     4010c5 <_init+0x15>
  4010c0:	e8 5b 02 00 00       	callq  401320 <.plt.got>
  4010c5:	48 83 c4 08          	add    $0x8,%rsp
  4010c9:	c3                   	retq   

Disassembly of section .plt:

00000000004010d0 <.plt>:
  4010d0:	ff 35 32 1f 20 00    	pushq  0x201f32(%rip)        # 603008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4010d6:	ff 25 34 1f 20 00    	jmpq   *0x201f34(%rip)        # 603010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4010dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010e0 <std::string::operator=(char const*)@plt>:
  4010e0:	ff 25 32 1f 20 00    	jmpq   *0x201f32(%rip)        # 603018 <std::string::operator=(char const*)@GLIBCXX_3.4>
  4010e6:	68 00 00 00 00       	pushq  $0x0
  4010eb:	e9 e0 ff ff ff       	jmpq   4010d0 <.plt>

00000000004010f0 <printf@plt>:
  4010f0:	ff 25 2a 1f 20 00    	jmpq   *0x201f2a(%rip)        # 603020 <printf@GLIBC_2.2.5>
  4010f6:	68 01 00 00 00       	pushq  $0x1
  4010fb:	e9 d0 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401100 <std::string::operator+=(char const*)@plt>:
  401100:	ff 25 22 1f 20 00    	jmpq   *0x201f22(%rip)        # 603028 <std::string::operator+=(char const*)@GLIBCXX_3.4>
  401106:	68 02 00 00 00       	pushq  $0x2
  40110b:	e9 c0 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401110 <backtrace@plt>:
  401110:	ff 25 1a 1f 20 00    	jmpq   *0x201f1a(%rip)        # 603030 <backtrace@GLIBC_2.2.5>
  401116:	68 03 00 00 00       	pushq  $0x3
  40111b:	e9 b0 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401120 <std::string::c_str() const@plt>:
  401120:	ff 25 12 1f 20 00    	jmpq   *0x201f12(%rip)        # 603038 <std::string::c_str() const@GLIBCXX_3.4>
  401126:	68 04 00 00 00       	pushq  $0x4
  40112b:	e9 a0 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401130 <operator delete(void*)@plt>:
  401130:	ff 25 0a 1f 20 00    	jmpq   *0x201f0a(%rip)        # 603040 <operator delete(void*)@GLIBCXX_3.4>
  401136:	68 05 00 00 00       	pushq  $0x5
  40113b:	e9 90 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401140 <exit@plt>:
  401140:	ff 25 02 1f 20 00    	jmpq   *0x201f02(%rip)        # 603048 <exit@GLIBC_2.2.5>
  401146:	68 06 00 00 00       	pushq  $0x6
  40114b:	e9 80 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401150 <std::ios_base::Init::Init()@plt>:
  401150:	ff 25 fa 1e 20 00    	jmpq   *0x201efa(%rip)        # 603050 <std::ios_base::Init::Init()@GLIBCXX_3.4>
  401156:	68 07 00 00 00       	pushq  $0x7
  40115b:	e9 70 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401160 <__libc_start_main@plt>:
  401160:	ff 25 f2 1e 20 00    	jmpq   *0x201ef2(%rip)        # 603058 <__libc_start_main@GLIBC_2.2.5>
  401166:	68 08 00 00 00       	pushq  $0x8
  40116b:	e9 60 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401170 <__cxa_atexit@plt>:
  401170:	ff 25 ea 1e 20 00    	jmpq   *0x201eea(%rip)        # 603060 <__cxa_atexit@GLIBC_2.2.5>
  401176:	68 09 00 00 00       	pushq  $0x9
  40117b:	e9 50 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401180 <std::runtime_error::~runtime_error()@plt>:
  401180:	ff 25 e2 1e 20 00    	jmpq   *0x201ee2(%rip)        # 603068 <std::runtime_error::~runtime_error()@GLIBCXX_3.4>
  401186:	68 0a 00 00 00       	pushq  $0xa
  40118b:	e9 40 ff ff ff       	jmpq   4010d0 <.plt>

0000000000401190 <std::ios_base::Init::~Init()@plt>:
  401190:	ff 25 da 1e 20 00    	jmpq   *0x201eda(%rip)        # 603070 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
  401196:	68 0b 00 00 00       	pushq  $0xb
  40119b:	e9 30 ff ff ff       	jmpq   4010d0 <.plt>

00000000004011a0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>:
  4011a0:	ff 25 d2 1e 20 00    	jmpq   *0x201ed2(%rip)        # 603078 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@GLIBCXX_3.4>
  4011a6:	68 0c 00 00 00       	pushq  $0xc
  4011ab:	e9 20 ff ff ff       	jmpq   4010d0 <.plt>

00000000004011b0 <backtrace_symbols@plt>:
  4011b0:	ff 25 ca 1e 20 00    	jmpq   *0x201eca(%rip)        # 603080 <backtrace_symbols@GLIBC_2.2.5>
  4011b6:	68 0d 00 00 00       	pushq  $0xd
  4011bb:	e9 10 ff ff ff       	jmpq   4010d0 <.plt>

00000000004011c0 <free@plt>:
  4011c0:	ff 25 c2 1e 20 00    	jmpq   *0x201ec2(%rip)        # 603088 <free@GLIBC_2.2.5>
  4011c6:	68 0e 00 00 00       	pushq  $0xe
  4011cb:	e9 00 ff ff ff       	jmpq   4010d0 <.plt>

00000000004011d0 <std::string::empty() const@plt>:
  4011d0:	ff 25 ba 1e 20 00    	jmpq   *0x201eba(%rip)        # 603090 <std::string::empty() const@GLIBCXX_3.4>
  4011d6:	68 0f 00 00 00       	pushq  $0xf
  4011db:	e9 f0 fe ff ff       	jmpq   4010d0 <.plt>

00000000004011e0 <std::string::operator+=(std::string const&)@plt>:
  4011e0:	ff 25 b2 1e 20 00    	jmpq   *0x201eb2(%rip)        # 603098 <std::string::operator+=(std::string const&)@GLIBCXX_3.4>
  4011e6:	68 10 00 00 00       	pushq  $0x10
  4011eb:	e9 e0 fe ff ff       	jmpq   4010d0 <.plt>

00000000004011f0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>:
  4011f0:	ff 25 aa 1e 20 00    	jmpq   *0x201eaa(%rip)        # 6030a0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@GLIBCXX_3.4>
  4011f6:	68 11 00 00 00       	pushq  $0x11
  4011fb:	e9 d0 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401200 <sigaction@plt>:
  401200:	ff 25 a2 1e 20 00    	jmpq   *0x201ea2(%rip)        # 6030a8 <sigaction@GLIBC_2.2.5>
  401206:	68 12 00 00 00       	pushq  $0x12
  40120b:	e9 c0 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401210 <__cxa_call_unexpected@plt>:
  401210:	ff 25 9a 1e 20 00    	jmpq   *0x201e9a(%rip)        # 6030b0 <__cxa_call_unexpected@CXXABI_1.3>
  401216:	68 13 00 00 00       	pushq  $0x13
  40121b:	e9 b0 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401220 <max(int, int, int)@plt>:
  401220:	ff 25 92 1e 20 00    	jmpq   *0x201e92(%rip)        # 6030b8 <max(int, int, int)>
  401226:	68 14 00 00 00       	pushq  $0x14
  40122b:	e9 a0 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401230 <std::allocator<char>::~allocator()@plt>:
  401230:	ff 25 8a 1e 20 00    	jmpq   *0x201e8a(%rip)        # 6030c0 <std::allocator<char>::~allocator()@GLIBCXX_3.4>
  401236:	68 15 00 00 00       	pushq  $0x15
  40123b:	e9 90 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401240 <localtime_r@plt>:
  401240:	ff 25 82 1e 20 00    	jmpq   *0x201e82(%rip)        # 6030c8 <localtime_r@GLIBC_2.2.5>
  401246:	68 16 00 00 00       	pushq  $0x16
  40124b:	e9 80 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401250 <__cxa_end_catch@plt>:
  401250:	ff 25 7a 1e 20 00    	jmpq   *0x201e7a(%rip)        # 6030d0 <__cxa_end_catch@CXXABI_1.3>
  401256:	68 17 00 00 00       	pushq  $0x17
  40125b:	e9 70 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401260 <sigemptyset@plt>:
  401260:	ff 25 72 1e 20 00    	jmpq   *0x201e72(%rip)        # 6030d8 <sigemptyset@GLIBC_2.2.5>
  401266:	68 18 00 00 00       	pushq  $0x18
  40126b:	e9 60 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401270 <__pthread_key_create@plt>:
  401270:	ff 25 6a 1e 20 00    	jmpq   *0x201e6a(%rip)        # 6030e0 <__pthread_key_create>
  401276:	68 19 00 00 00       	pushq  $0x19
  40127b:	e9 50 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401280 <__cxa_begin_catch@plt>:
  401280:	ff 25 62 1e 20 00    	jmpq   *0x201e62(%rip)        # 6030e8 <__cxa_begin_catch@CXXABI_1.3>
  401286:	68 1a 00 00 00       	pushq  $0x1a
  40128b:	e9 40 fe ff ff       	jmpq   4010d0 <.plt>

0000000000401290 <fwrite@plt>:
  401290:	ff 25 5a 1e 20 00    	jmpq   *0x201e5a(%rip)        # 6030f0 <fwrite@GLIBC_2.2.5>
  401296:	68 1b 00 00 00       	pushq  $0x1b
  40129b:	e9 30 fe ff ff       	jmpq   4010d0 <.plt>

00000000004012a0 <std::allocator<char>::allocator()@plt>:
  4012a0:	ff 25 52 1e 20 00    	jmpq   *0x201e52(%rip)        # 6030f8 <std::allocator<char>::allocator()@GLIBCXX_3.4>
  4012a6:	68 1c 00 00 00       	pushq  $0x1c
  4012ab:	e9 20 fe ff ff       	jmpq   4010d0 <.plt>

00000000004012b0 <__gxx_personality_v0@plt>:
  4012b0:	ff 25 4a 1e 20 00    	jmpq   *0x201e4a(%rip)        # 603100 <__gxx_personality_v0@CXXABI_1.3>
  4012b6:	68 1d 00 00 00       	pushq  $0x1d
  4012bb:	e9 10 fe ff ff       	jmpq   4010d0 <.plt>

00000000004012c0 <fprintf@plt>:
  4012c0:	ff 25 42 1e 20 00    	jmpq   *0x201e42(%rip)        # 603108 <fprintf@GLIBC_2.2.5>
  4012c6:	68 1e 00 00 00       	pushq  $0x1e
  4012cb:	e9 00 fe ff ff       	jmpq   4010d0 <.plt>

00000000004012d0 <_Unwind_Resume@plt>:
  4012d0:	ff 25 3a 1e 20 00    	jmpq   *0x201e3a(%rip)        # 603110 <_Unwind_Resume@GCC_3.0>
  4012d6:	68 1f 00 00 00       	pushq  $0x1f
  4012db:	e9 f0 fd ff ff       	jmpq   4010d0 <.plt>

00000000004012e0 <strftime@plt>:
  4012e0:	ff 25 32 1e 20 00    	jmpq   *0x201e32(%rip)        # 603118 <strftime@GLIBC_2.2.5>
  4012e6:	68 20 00 00 00       	pushq  $0x20
  4012eb:	e9 e0 fd ff ff       	jmpq   4010d0 <.plt>

00000000004012f0 <std::runtime_error::what() const@plt>:
  4012f0:	ff 25 2a 1e 20 00    	jmpq   *0x201e2a(%rip)        # 603120 <std::runtime_error::what() const@GLIBCXX_3.4>
  4012f6:	68 21 00 00 00       	pushq  $0x21
  4012fb:	e9 d0 fd ff ff       	jmpq   4010d0 <.plt>

0000000000401300 <time@plt>:
  401300:	ff 25 22 1e 20 00    	jmpq   *0x201e22(%rip)        # 603128 <time@GLIBC_2.2.5>
  401306:	68 22 00 00 00       	pushq  $0x22
  40130b:	e9 c0 fd ff ff       	jmpq   4010d0 <.plt>

0000000000401310 <fflush@plt>:
  401310:	ff 25 1a 1e 20 00    	jmpq   *0x201e1a(%rip)        # 603130 <fflush@GLIBC_2.2.5>
  401316:	68 23 00 00 00       	pushq  $0x23
  40131b:	e9 b0 fd ff ff       	jmpq   4010d0 <.plt>

Disassembly of section .plt.got:

0000000000401320 <.plt.got>:
  401320:	ff 25 d2 1c 20 00    	jmpq   *0x201cd2(%rip)        # 602ff8 <__gmon_start__>
  401326:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000401330 <_start>:
  401330:	31 ed                	xor    %ebp,%ebp
  401332:	49 89 d1             	mov    %rdx,%r9
  401335:	5e                   	pop    %rsi
  401336:	48 89 e2             	mov    %rsp,%rdx
  401339:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40133d:	50                   	push   %rax
  40133e:	54                   	push   %rsp
  40133f:	49 c7 c0 c0 1b 40 00 	mov    $0x401bc0,%r8
  401346:	48 c7 c1 50 1b 40 00 	mov    $0x401b50,%rcx
  40134d:	48 c7 c7 cb 17 40 00 	mov    $0x4017cb,%rdi
  401354:	e8 07 fe ff ff       	callq  401160 <__libc_start_main@plt>
  401359:	f4                   	hlt    
  40135a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401360 <deregister_tm_clones>:
  401360:	b8 47 31 60 00       	mov    $0x603147,%eax
  401365:	55                   	push   %rbp
  401366:	48 2d 40 31 60 00    	sub    $0x603140,%rax
  40136c:	48 83 f8 0e          	cmp    $0xe,%rax
  401370:	48 89 e5             	mov    %rsp,%rbp
  401373:	77 02                	ja     401377 <deregister_tm_clones+0x17>
  401375:	5d                   	pop    %rbp
  401376:	c3                   	retq   
  401377:	b8 00 00 00 00       	mov    $0x0,%eax
  40137c:	48 85 c0             	test   %rax,%rax
  40137f:	74 f4                	je     401375 <deregister_tm_clones+0x15>
  401381:	5d                   	pop    %rbp
  401382:	bf 40 31 60 00       	mov    $0x603140,%edi
  401387:	ff e0                	jmpq   *%rax
  401389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401390 <register_tm_clones>:
  401390:	b8 40 31 60 00       	mov    $0x603140,%eax
  401395:	55                   	push   %rbp
  401396:	48 2d 40 31 60 00    	sub    $0x603140,%rax
  40139c:	48 c1 f8 03          	sar    $0x3,%rax
  4013a0:	48 89 e5             	mov    %rsp,%rbp
  4013a3:	48 89 c2             	mov    %rax,%rdx
  4013a6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4013aa:	48 01 d0             	add    %rdx,%rax
  4013ad:	48 d1 f8             	sar    %rax
  4013b0:	75 02                	jne    4013b4 <register_tm_clones+0x24>
  4013b2:	5d                   	pop    %rbp
  4013b3:	c3                   	retq   
  4013b4:	ba 00 00 00 00       	mov    $0x0,%edx
  4013b9:	48 85 d2             	test   %rdx,%rdx
  4013bc:	74 f4                	je     4013b2 <register_tm_clones+0x22>
  4013be:	5d                   	pop    %rbp
  4013bf:	48 89 c6             	mov    %rax,%rsi
  4013c2:	bf 40 31 60 00       	mov    $0x603140,%edi
  4013c7:	ff e2                	jmpq   *%rdx
  4013c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004013d0 <__do_global_dtors_aux>:
  4013d0:	80 3d e9 1d 20 00 00 	cmpb   $0x0,0x201de9(%rip)        # 6031c0 <completed.6355>
  4013d7:	75 11                	jne    4013ea <__do_global_dtors_aux+0x1a>
  4013d9:	55                   	push   %rbp
  4013da:	48 89 e5             	mov    %rsp,%rbp
  4013dd:	e8 7e ff ff ff       	callq  401360 <deregister_tm_clones>
  4013e2:	5d                   	pop    %rbp
  4013e3:	c6 05 d6 1d 20 00 01 	movb   $0x1,0x201dd6(%rip)        # 6031c0 <completed.6355>
  4013ea:	f3 c3                	repz retq 
  4013ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004013f0 <frame_dummy>:
  4013f0:	48 83 3d c8 19 20 00 	cmpq   $0x0,0x2019c8(%rip)        # 602dc0 <__JCR_END__>
  4013f7:	00 
  4013f8:	74 1e                	je     401418 <frame_dummy+0x28>
  4013fa:	b8 00 00 00 00       	mov    $0x0,%eax
  4013ff:	48 85 c0             	test   %rax,%rax
  401402:	74 14                	je     401418 <frame_dummy+0x28>
  401404:	55                   	push   %rbp
  401405:	bf c0 2d 60 00       	mov    $0x602dc0,%edi
  40140a:	48 89 e5             	mov    %rsp,%rbp
  40140d:	ff d0                	callq  *%rax
  40140f:	5d                   	pop    %rbp
  401410:	e9 7b ff ff ff       	jmpq   401390 <register_tm_clones>
  401415:	0f 1f 00             	nopl   (%rax)
  401418:	e9 73 ff ff ff       	jmpq   401390 <register_tm_clones>

000000000040141d <getFormatedDateTime()>:
  40141d:	55                   	push   %rbp
  40141e:	48 89 e5             	mov    %rsp,%rbp
  401421:	53                   	push   %rbx
  401422:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
  401429:	48 89 bd 98 fe ff ff 	mov    %rdi,-0x168(%rbp)
  401430:	c7 45 ec 00 01 00 00 	movl   $0x100,-0x14(%rbp)
  401437:	48 8d b5 e0 fe ff ff 	lea    -0x120(%rbp),%rsi
  40143e:	b8 00 00 00 00       	mov    $0x0,%eax
  401443:	ba 20 00 00 00       	mov    $0x20,%edx
  401448:	48 89 f7             	mov    %rsi,%rdi
  40144b:	48 89 d1             	mov    %rdx,%rcx
  40144e:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  401451:	bf 00 00 00 00       	mov    $0x0,%edi
  401456:	e8 a5 fe ff ff       	callq  401300 <time@plt>
  40145b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40145f:	48 8d b5 a0 fe ff ff 	lea    -0x160(%rbp),%rsi
  401466:	b8 00 00 00 00       	mov    $0x0,%eax
  40146b:	ba 07 00 00 00       	mov    $0x7,%edx
  401470:	48 89 f7             	mov    %rsi,%rdi
  401473:	48 89 d1             	mov    %rdx,%rcx
  401476:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  401479:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
  401480:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401484:	48 89 d6             	mov    %rdx,%rsi
  401487:	48 89 c7             	mov    %rax,%rdi
  40148a:	e8 b1 fd ff ff       	callq  401240 <localtime_r@plt>
  40148f:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
  401496:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  40149d:	48 89 d1             	mov    %rdx,%rcx
  4014a0:	ba f6 1b 40 00       	mov    $0x401bf6,%edx
  4014a5:	be 00 01 00 00       	mov    $0x100,%esi
  4014aa:	48 89 c7             	mov    %rax,%rdi
  4014ad:	e8 2e fe ff ff       	callq  4012e0 <strftime@plt>
  4014b2:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
  4014b6:	48 89 c7             	mov    %rax,%rdi
  4014b9:	e8 e2 fd ff ff       	callq  4012a0 <std::allocator<char>::allocator()@plt>
  4014be:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
  4014c2:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  4014c9:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  4014d0:	48 89 ce             	mov    %rcx,%rsi
  4014d3:	48 89 c7             	mov    %rax,%rdi
  4014d6:	e8 15 fd ff ff       	callq  4011f0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@plt>
  4014db:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
  4014df:	48 89 c7             	mov    %rax,%rdi
  4014e2:	e8 49 fd ff ff       	callq  401230 <std::allocator<char>::~allocator()@plt>
  4014e7:	eb 1a                	jmp    401503 <getFormatedDateTime()+0xe6>
  4014e9:	48 89 c3             	mov    %rax,%rbx
  4014ec:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
  4014f0:	48 89 c7             	mov    %rax,%rdi
  4014f3:	e8 38 fd ff ff       	callq  401230 <std::allocator<char>::~allocator()@plt>
  4014f8:	48 89 d8             	mov    %rbx,%rax
  4014fb:	48 89 c7             	mov    %rax,%rdi
  4014fe:	e8 cd fd ff ff       	callq  4012d0 <_Unwind_Resume@plt>
  401503:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40150a:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
  401511:	5b                   	pop    %rbx
  401512:	5d                   	pop    %rbp
  401513:	c3                   	retq   

0000000000401514 <print_stack_fs(int, _IO_FILE*)>:
  401514:	55                   	push   %rbp
  401515:	48 89 e5             	mov    %rsp,%rbp
  401518:	53                   	push   %rbx
  401519:	48 81 ec 48 04 00 00 	sub    $0x448,%rsp
  401520:	89 bd bc fb ff ff    	mov    %edi,-0x444(%rbp)
  401526:	48 89 b5 b0 fb ff ff 	mov    %rsi,-0x450(%rbp)
  40152d:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  401534:	48 89 c1             	mov    %rax,%rcx
  401537:	ba 27 00 00 00       	mov    $0x27,%edx
  40153c:	be 01 00 00 00       	mov    $0x1,%esi
  401541:	bf 08 1c 40 00       	mov    $0x401c08,%edi
  401546:	e8 45 fd ff ff       	callq  401290 <fwrite@plt>
  40154b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  40154f:	48 89 c7             	mov    %rax,%rdi
  401552:	e8 c6 fe ff ff       	callq  40141d <getFormatedDateTime()>
  401557:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  40155b:	48 89 c7             	mov    %rax,%rdi
  40155e:	e8 bd fb ff ff       	callq  401120 <std::string::c_str() const@plt>
  401563:	48 89 c2             	mov    %rax,%rdx
  401566:	8b 8d bc fb ff ff    	mov    -0x444(%rbp),%ecx
  40156c:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  401573:	be 30 1c 40 00       	mov    $0x401c30,%esi
  401578:	48 89 c7             	mov    %rax,%rdi
  40157b:	b8 00 00 00 00       	mov    $0x0,%eax
  401580:	e8 3b fd ff ff       	callq  4012c0 <fprintf@plt>
  401585:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  401589:	48 89 c7             	mov    %rax,%rdi
  40158c:	e8 0f fc ff ff       	callq  4011a0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
  401591:	48 c7 45 e0 80 00 00 	movq   $0x80,-0x20(%rbp)
  401598:	00 
  401599:	b8 80 00 00 00       	mov    $0x80,%eax
  40159e:	89 c2                	mov    %eax,%edx
  4015a0:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  4015a7:	89 d6                	mov    %edx,%esi
  4015a9:	48 89 c7             	mov    %rax,%rdi
  4015ac:	e8 5f fb ff ff       	callq  401110 <backtrace@plt>
  4015b1:	48 98                	cltq   
  4015b3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4015b7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4015bc:	0f 84 ac 00 00 00    	je     40166e <print_stack_fs(int, _IO_FILE*)+0x15a>
  4015c2:	48 83 7d d8 7f       	cmpq   $0x7f,-0x28(%rbp)
  4015c7:	0f 87 a1 00 00 00    	ja     40166e <print_stack_fs(int, _IO_FILE*)+0x15a>
  4015cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4015d1:	89 c2                	mov    %eax,%edx
  4015d3:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
  4015da:	89 d6                	mov    %edx,%esi
  4015dc:	48 89 c7             	mov    %rax,%rdi
  4015df:	e8 cc fb ff ff       	callq  4011b0 <backtrace_symbols@plt>
  4015e4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4015e8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  4015ed:	74 63                	je     401652 <print_stack_fs(int, _IO_FILE*)+0x13e>
  4015ef:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  4015f6:	00 
  4015f7:	eb 34                	jmp    40162d <print_stack_fs(int, _IO_FILE*)+0x119>
  4015f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4015fd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  401604:	00 
  401605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401609:	48 01 d0             	add    %rdx,%rax
  40160c:	48 8b 10             	mov    (%rax),%rdx
  40160f:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  401616:	be 49 1c 40 00       	mov    $0x401c49,%esi
  40161b:	48 89 c7             	mov    %rax,%rdi
  40161e:	b8 00 00 00 00       	mov    $0x0,%eax
  401623:	e8 98 fc ff ff       	callq  4012c0 <fprintf@plt>
  401628:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  40162d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401631:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  401635:	72 c2                	jb     4015f9 <print_stack_fs(int, _IO_FILE*)+0xe5>
  401637:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
  40163e:	48 89 c7             	mov    %rax,%rdi
  401641:	e8 ca fc ff ff       	callq  401310 <fflush@plt>
  401646:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40164a:	48 89 c7             	mov    %rax,%rdi
  40164d:	e8 6e fb ff ff       	callq  4011c0 <free@plt>
  401652:	eb 1a                	jmp    40166e <print_stack_fs(int, _IO_FILE*)+0x15a>
  401654:	48 89 c3             	mov    %rax,%rbx
  401657:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  40165b:	48 89 c7             	mov    %rax,%rdi
  40165e:	e8 3d fb ff ff       	callq  4011a0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
  401663:	48 89 d8             	mov    %rbx,%rax
  401666:	48 89 c7             	mov    %rax,%rdi
  401669:	e8 62 fc ff ff       	callq  4012d0 <_Unwind_Resume@plt>
  40166e:	48 81 c4 48 04 00 00 	add    $0x448,%rsp
  401675:	5b                   	pop    %rbx
  401676:	5d                   	pop    %rbp
  401677:	c3                   	retq   

0000000000401678 <sig_handler(int)>:
  401678:	55                   	push   %rbp
  401679:	48 89 e5             	mov    %rsp,%rbp
  40167c:	48 83 ec 10          	sub    $0x10,%rsp
  401680:	89 7d fc             	mov    %edi,-0x4(%rbp)
  401683:	83 7d fc 0b          	cmpl   $0xb,-0x4(%rbp)
  401687:	74 12                	je     40169b <sig_handler(int)+0x23>
  401689:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)
  40168d:	74 0c                	je     40169b <sig_handler(int)+0x23>
  40168f:	83 7d fc 06          	cmpl   $0x6,-0x4(%rbp)
  401693:	74 06                	je     40169b <sig_handler(int)+0x23>
  401695:	83 7d fc 08          	cmpl   $0x8,-0x4(%rbp)
  401699:	75 1e                	jne    4016b9 <sig_handler(int)+0x41>
  40169b:	48 8b 15 16 1b 20 00 	mov    0x201b16(%rip),%rdx        # 6031b8 <stderr@@GLIBC_2.2.5>
  4016a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4016a5:	48 89 d6             	mov    %rdx,%rsi
  4016a8:	89 c7                	mov    %eax,%edi
  4016aa:	e8 65 fe ff ff       	callq  401514 <print_stack_fs(int, _IO_FILE*)>
  4016af:	bf ff ff ff ff       	mov    $0xffffffff,%edi
  4016b4:	e8 87 fa ff ff       	callq  401140 <exit@plt>
  4016b9:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)
  4016bd:	74 06                	je     4016c5 <sig_handler(int)+0x4d>
  4016bf:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  4016c3:	75 0a                	jne    4016cf <sig_handler(int)+0x57>
  4016c5:	bf ff ff ff ff       	mov    $0xffffffff,%edi
  4016ca:	e8 71 fa ff ff       	callq  401140 <exit@plt>
  4016cf:	c9                   	leaveq 
  4016d0:	c3                   	retq   

00000000004016d1 <register_signal_handler()>:
  4016d1:	55                   	push   %rbp
  4016d2:	48 89 e5             	mov    %rsp,%rbp
  4016d5:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  4016dc:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  4016e3:	48 83 c0 08          	add    $0x8,%rax
  4016e7:	48 89 c7             	mov    %rax,%rdi
  4016ea:	e8 71 fb ff ff       	callq  401260 <sigemptyset@plt>
  4016ef:	48 c7 85 60 ff ff ff 	movq   $0x401678,-0xa0(%rbp)
  4016f6:	78 16 40 00 
  4016fa:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  401701:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  401708:	ba 00 00 00 00       	mov    $0x0,%edx
  40170d:	48 89 c6             	mov    %rax,%rsi
  401710:	bf 0f 00 00 00       	mov    $0xf,%edi
  401715:	e8 e6 fa ff ff       	callq  401200 <sigaction@plt>
  40171a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  401721:	ba 00 00 00 00       	mov    $0x0,%edx
  401726:	48 89 c6             	mov    %rax,%rsi
  401729:	bf 02 00 00 00       	mov    $0x2,%edi
  40172e:	e8 cd fa ff ff       	callq  401200 <sigaction@plt>
  401733:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  40173a:	ba 00 00 00 00       	mov    $0x0,%edx
  40173f:	48 89 c6             	mov    %rax,%rsi
  401742:	bf 03 00 00 00       	mov    $0x3,%edi
  401747:	e8 b4 fa ff ff       	callq  401200 <sigaction@plt>
  40174c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  401753:	ba 00 00 00 00       	mov    $0x0,%edx
  401758:	48 89 c6             	mov    %rax,%rsi
  40175b:	bf 0d 00 00 00       	mov    $0xd,%edi
  401760:	e8 9b fa ff ff       	callq  401200 <sigaction@plt>
  401765:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  40176c:	ba 00 00 00 00       	mov    $0x0,%edx
  401771:	48 89 c6             	mov    %rax,%rsi
  401774:	bf 07 00 00 00       	mov    $0x7,%edi
  401779:	e8 82 fa ff ff       	callq  401200 <sigaction@plt>
  40177e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  401785:	ba 00 00 00 00       	mov    $0x0,%edx
  40178a:	48 89 c6             	mov    %rax,%rsi
  40178d:	bf 06 00 00 00       	mov    $0x6,%edi
  401792:	e8 69 fa ff ff       	callq  401200 <sigaction@plt>
  401797:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  40179e:	ba 00 00 00 00       	mov    $0x0,%edx
  4017a3:	48 89 c6             	mov    %rax,%rsi
  4017a6:	bf 08 00 00 00       	mov    $0x8,%edi
  4017ab:	e8 50 fa ff ff       	callq  401200 <sigaction@plt>
  4017b0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  4017b7:	ba 00 00 00 00       	mov    $0x0,%edx
  4017bc:	48 89 c6             	mov    %rax,%rsi
  4017bf:	bf 0b 00 00 00       	mov    $0xb,%edi
  4017c4:	e8 37 fa ff ff       	callq  401200 <sigaction@plt>
  4017c9:	c9                   	leaveq 
  4017ca:	c3                   	retq   

00000000004017cb <main>:
  4017cb:	55                   	push   %rbp
  4017cc:	48 89 e5             	mov    %rsp,%rbp
  4017cf:	48 83 ec 20          	sub    $0x20,%rsp
  4017d3:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4017d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4017da:	e8 f2 fe ff ff       	callq  4016d1 <register_signal_handler()>
  4017df:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
  4017e6:	c7 45 f8 fe ff ff ff 	movl   $0xfffffffe,-0x8(%rbp)
  4017ed:	c7 45 f4 64 00 00 00 	movl   $0x64,-0xc(%rbp)
  4017f4:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4017f7:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4017fa:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4017fd:	89 ce                	mov    %ecx,%esi
  4017ff:	89 c7                	mov    %eax,%edi
  401801:	e8 1a fa ff ff       	callq  401220 <max(int, int, int)@plt>
  401806:	89 c6                	mov    %eax,%esi
  401808:	bf 50 1c 40 00       	mov    $0x401c50,%edi
  40180d:	b8 00 00 00 00       	mov    $0x0,%eax
  401812:	e8 d9 f8 ff ff       	callq  4010f0 <printf@plt>
  401817:	b8 00 00 00 00       	mov    $0x0,%eax
  40181c:	c9                   	leaveq 
  40181d:	c3                   	retq   

000000000040181e <__static_initialization_and_destruction_0(int, int)>:
  40181e:	55                   	push   %rbp
  40181f:	48 89 e5             	mov    %rsp,%rbp
  401822:	48 83 ec 10          	sub    $0x10,%rsp
  401826:	89 7d fc             	mov    %edi,-0x4(%rbp)
  401829:	89 75 f8             	mov    %esi,-0x8(%rbp)
  40182c:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  401830:	0f 85 81 00 00 00    	jne    4018b7 <__static_initialization_and_destruction_0(int, int)+0x99>
  401836:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  40183d:	75 78                	jne    4018b7 <__static_initialization_and_destruction_0(int, int)+0x99>
  40183f:	bf c1 31 60 00       	mov    $0x6031c1,%edi
  401844:	e8 a1 02 00 00       	callq  401aea <boost::arg<1>::arg()>
  401849:	bf c2 31 60 00       	mov    $0x6031c2,%edi
  40184e:	e8 a1 02 00 00       	callq  401af4 <boost::arg<2>::arg()>
  401853:	bf c3 31 60 00       	mov    $0x6031c3,%edi
  401858:	e8 a1 02 00 00       	callq  401afe <boost::arg<3>::arg()>
  40185d:	bf c4 31 60 00       	mov    $0x6031c4,%edi
  401862:	e8 a1 02 00 00       	callq  401b08 <boost::arg<4>::arg()>
  401867:	bf c5 31 60 00       	mov    $0x6031c5,%edi
  40186c:	e8 a1 02 00 00       	callq  401b12 <boost::arg<5>::arg()>
  401871:	bf c6 31 60 00       	mov    $0x6031c6,%edi
  401876:	e8 a1 02 00 00       	callq  401b1c <boost::arg<6>::arg()>
  40187b:	bf c7 31 60 00       	mov    $0x6031c7,%edi
  401880:	e8 a1 02 00 00       	callq  401b26 <boost::arg<7>::arg()>
  401885:	bf c8 31 60 00       	mov    $0x6031c8,%edi
  40188a:	e8 a1 02 00 00       	callq  401b30 <boost::arg<8>::arg()>
  40188f:	bf c9 31 60 00       	mov    $0x6031c9,%edi
  401894:	e8 a1 02 00 00       	callq  401b3a <boost::arg<9>::arg()>
  401899:	bf ca 31 60 00       	mov    $0x6031ca,%edi
  40189e:	e8 ad f8 ff ff       	callq  401150 <std::ios_base::Init::Init()@plt>
  4018a3:	ba e8 1b 40 00       	mov    $0x401be8,%edx
  4018a8:	be ca 31 60 00       	mov    $0x6031ca,%esi
  4018ad:	bf 90 11 40 00       	mov    $0x401190,%edi
  4018b2:	e8 b9 f8 ff ff       	callq  401170 <__cxa_atexit@plt>
  4018b7:	c9                   	leaveq 
  4018b8:	c3                   	retq   

00000000004018b9 <_GLOBAL__sub_I__Z23register_signal_handlerv>:
  4018b9:	55                   	push   %rbp
  4018ba:	48 89 e5             	mov    %rsp,%rbp
  4018bd:	be ff ff 00 00       	mov    $0xffff,%esi
  4018c2:	bf 01 00 00 00       	mov    $0x1,%edi
  4018c7:	e8 52 ff ff ff       	callq  40181e <__static_initialization_and_destruction_0(int, int)>
  4018cc:	5d                   	pop    %rbp
  4018cd:	c3                   	retq   

00000000004018ce <boost::system::error_code::value() const>:
  4018ce:	55                   	push   %rbp
  4018cf:	48 89 e5             	mov    %rsp,%rbp
  4018d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4018d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4018da:	8b 00                	mov    (%rax),%eax
  4018dc:	5d                   	pop    %rbp
  4018dd:	c3                   	retq   

00000000004018de <boost::system::error_code::message() const>:
  4018de:	55                   	push   %rbp
  4018df:	48 89 e5             	mov    %rsp,%rbp
  4018e2:	53                   	push   %rbx
  4018e3:	48 83 ec 18          	sub    $0x18,%rsp
  4018e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4018eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4018ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4018f3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4018f7:	48 8b 00             	mov    (%rax),%rax
  4018fa:	48 83 c0 18          	add    $0x18,%rax
  4018fe:	48 8b 18             	mov    (%rax),%rbx
  401901:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401905:	48 89 c7             	mov    %rax,%rdi
  401908:	e8 c1 ff ff ff       	callq  4018ce <boost::system::error_code::value() const>
  40190d:	89 c2                	mov    %eax,%edx
  40190f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401913:	48 8b 48 08          	mov    0x8(%rax),%rcx
  401917:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40191b:	48 89 ce             	mov    %rcx,%rsi
  40191e:	48 89 c7             	mov    %rax,%rdi
  401921:	ff d3                	callq  *%rbx
  401923:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401927:	48 83 c4 18          	add    $0x18,%rsp
  40192b:	5b                   	pop    %rbx
  40192c:	5d                   	pop    %rbp
  40192d:	c3                   	retq   

000000000040192e <boost::system::system_error::~system_error()>:
  40192e:	55                   	push   %rbp
  40192f:	48 89 e5             	mov    %rsp,%rbp
  401932:	41 54                	push   %r12
  401934:	53                   	push   %rbx
  401935:	48 83 ec 10          	sub    $0x10,%rsp
  401939:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40193d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401941:	48 c7 00 b0 1c 40 00 	movq   $0x401cb0,(%rax)
  401948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40194c:	48 83 c0 20          	add    $0x20,%rax
  401950:	48 89 c7             	mov    %rax,%rdi
  401953:	e8 48 f8 ff ff       	callq  4011a0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
  401958:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40195c:	48 89 c7             	mov    %rax,%rdi
  40195f:	e8 1c f8 ff ff       	callq  401180 <std::runtime_error::~runtime_error()@plt>
  401964:	b8 00 00 00 00       	mov    $0x0,%eax
  401969:	85 c0                	test   %eax,%eax
  40196b:	74 3c                	je     4019a9 <boost::system::system_error::~system_error()+0x7b>
  40196d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401971:	48 89 c7             	mov    %rax,%rdi
  401974:	e8 b7 f7 ff ff       	callq  401130 <operator delete(void*)@plt>
  401979:	eb 2e                	jmp    4019a9 <boost::system::system_error::~system_error()+0x7b>
  40197b:	49 89 c4             	mov    %rax,%r12
  40197e:	48 89 d3             	mov    %rdx,%rbx
  401981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401985:	48 89 c7             	mov    %rax,%rdi
  401988:	e8 f3 f7 ff ff       	callq  401180 <std::runtime_error::~runtime_error()@plt>
  40198d:	4c 89 e0             	mov    %r12,%rax
  401990:	48 89 da             	mov    %rbx,%rdx
  401993:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
  401997:	74 08                	je     4019a1 <boost::system::system_error::~system_error()+0x73>
  401999:	48 89 c7             	mov    %rax,%rdi
  40199c:	e8 2f f9 ff ff       	callq  4012d0 <_Unwind_Resume@plt>
  4019a1:	48 89 c7             	mov    %rax,%rdi
  4019a4:	e8 67 f8 ff ff       	callq  401210 <__cxa_call_unexpected@plt>
  4019a9:	48 83 c4 10          	add    $0x10,%rsp
  4019ad:	5b                   	pop    %rbx
  4019ae:	41 5c                	pop    %r12
  4019b0:	5d                   	pop    %rbp
  4019b1:	c3                   	retq   

00000000004019b2 <boost::system::system_error::~system_error()>:
  4019b2:	55                   	push   %rbp
  4019b3:	48 89 e5             	mov    %rsp,%rbp
  4019b6:	48 83 ec 10          	sub    $0x10,%rsp
  4019ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4019be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4019c2:	48 89 c7             	mov    %rax,%rdi
  4019c5:	e8 64 ff ff ff       	callq  40192e <boost::system::system_error::~system_error()>
  4019ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4019ce:	48 89 c7             	mov    %rax,%rdi
  4019d1:	e8 5a f7 ff ff       	callq  401130 <operator delete(void*)@plt>
  4019d6:	c9                   	leaveq 
  4019d7:	c3                   	retq   

00000000004019d8 <boost::system::system_error::what() const>:
  4019d8:	55                   	push   %rbp
  4019d9:	48 89 e5             	mov    %rsp,%rbp
  4019dc:	53                   	push   %rbx
  4019dd:	48 83 ec 28          	sub    $0x28,%rsp
  4019e1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4019e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4019e9:	48 83 c0 20          	add    $0x20,%rax
  4019ed:	48 89 c7             	mov    %rax,%rdi
  4019f0:	e8 db f7 ff ff       	callq  4011d0 <std::string::empty() const@plt>
  4019f5:	84 c0                	test   %al,%al
  4019f7:	0f 84 85 00 00 00    	je     401a82 <boost::system::system_error::what() const+0xaa>
  4019fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a01:	48 89 c7             	mov    %rax,%rdi
  401a04:	e8 e7 f8 ff ff       	callq  4012f0 <std::runtime_error::what() const@plt>
  401a09:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  401a0d:	48 83 c2 20          	add    $0x20,%rdx
  401a11:	48 89 c6             	mov    %rax,%rsi
  401a14:	48 89 d7             	mov    %rdx,%rdi
  401a17:	e8 c4 f6 ff ff       	callq  4010e0 <std::string::operator=(char const*)@plt>
  401a1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a20:	48 83 c0 20          	add    $0x20,%rax
  401a24:	48 89 c7             	mov    %rax,%rdi
  401a27:	e8 a4 f7 ff ff       	callq  4011d0 <std::string::empty() const@plt>
  401a2c:	83 f0 01             	xor    $0x1,%eax
  401a2f:	84 c0                	test   %al,%al
  401a31:	74 15                	je     401a48 <boost::system::system_error::what() const+0x70>
  401a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a37:	48 83 c0 20          	add    $0x20,%rax
  401a3b:	be f0 1b 40 00       	mov    $0x401bf0,%esi
  401a40:	48 89 c7             	mov    %rax,%rdi
  401a43:	e8 b8 f6 ff ff       	callq  401100 <std::string::operator+=(char const*)@plt>
  401a48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a4c:	48 8d 50 10          	lea    0x10(%rax),%rdx
  401a50:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401a54:	48 89 d6             	mov    %rdx,%rsi
  401a57:	48 89 c7             	mov    %rax,%rdi
  401a5a:	e8 7f fe ff ff       	callq  4018de <boost::system::error_code::message() const>
  401a5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a63:	48 8d 50 20          	lea    0x20(%rax),%rdx
  401a67:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401a6b:	48 89 c6             	mov    %rax,%rsi
  401a6e:	48 89 d7             	mov    %rdx,%rdi
  401a71:	e8 6a f7 ff ff       	callq  4011e0 <std::string::operator+=(std::string const&)@plt>
  401a76:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401a7a:	48 89 c7             	mov    %rax,%rdi
  401a7d:	e8 1e f7 ff ff       	callq  4011a0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
  401a82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a86:	48 83 c0 20          	add    $0x20,%rax
  401a8a:	48 89 c7             	mov    %rax,%rdi
  401a8d:	e8 8e f6 ff ff       	callq  401120 <std::string::c_str() const@plt>
  401a92:	48 89 c3             	mov    %rax,%rbx
  401a95:	48 89 d8             	mov    %rbx,%rax
  401a98:	eb 48                	jmp    401ae2 <boost::system::system_error::what() const+0x10a>
  401a9a:	48 89 c3             	mov    %rax,%rbx
  401a9d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401aa1:	48 89 c7             	mov    %rax,%rdi
  401aa4:	e8 f7 f6 ff ff       	callq  4011a0 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@plt>
  401aa9:	48 89 d8             	mov    %rbx,%rax
  401aac:	eb 00                	jmp    401aae <boost::system::system_error::what() const+0xd6>
  401aae:	48 89 c7             	mov    %rax,%rdi
  401ab1:	e8 ca f7 ff ff       	callq  401280 <__cxa_begin_catch@plt>
  401ab6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401aba:	48 89 c7             	mov    %rax,%rdi
  401abd:	e8 2e f8 ff ff       	callq  4012f0 <std::runtime_error::what() const@plt>
  401ac2:	48 89 c3             	mov    %rax,%rbx
  401ac5:	e8 86 f7 ff ff       	callq  401250 <__cxa_end_catch@plt>
  401aca:	eb c9                	jmp    401a95 <boost::system::system_error::what() const+0xbd>
  401acc:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
  401ad0:	74 08                	je     401ada <boost::system::system_error::what() const+0x102>
  401ad2:	48 89 c7             	mov    %rax,%rdi
  401ad5:	e8 f6 f7 ff ff       	callq  4012d0 <_Unwind_Resume@plt>
  401ada:	48 89 c7             	mov    %rax,%rdi
  401add:	e8 2e f7 ff ff       	callq  401210 <__cxa_call_unexpected@plt>
  401ae2:	48 83 c4 28          	add    $0x28,%rsp
  401ae6:	5b                   	pop    %rbx
  401ae7:	5d                   	pop    %rbp
  401ae8:	c3                   	retq   
  401ae9:	90                   	nop

0000000000401aea <boost::arg<1>::arg()>:
  401aea:	55                   	push   %rbp
  401aeb:	48 89 e5             	mov    %rsp,%rbp
  401aee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401af2:	5d                   	pop    %rbp
  401af3:	c3                   	retq   

0000000000401af4 <boost::arg<2>::arg()>:
  401af4:	55                   	push   %rbp
  401af5:	48 89 e5             	mov    %rsp,%rbp
  401af8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401afc:	5d                   	pop    %rbp
  401afd:	c3                   	retq   

0000000000401afe <boost::arg<3>::arg()>:
  401afe:	55                   	push   %rbp
  401aff:	48 89 e5             	mov    %rsp,%rbp
  401b02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b06:	5d                   	pop    %rbp
  401b07:	c3                   	retq   

0000000000401b08 <boost::arg<4>::arg()>:
  401b08:	55                   	push   %rbp
  401b09:	48 89 e5             	mov    %rsp,%rbp
  401b0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b10:	5d                   	pop    %rbp
  401b11:	c3                   	retq   

0000000000401b12 <boost::arg<5>::arg()>:
  401b12:	55                   	push   %rbp
  401b13:	48 89 e5             	mov    %rsp,%rbp
  401b16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b1a:	5d                   	pop    %rbp
  401b1b:	c3                   	retq   

0000000000401b1c <boost::arg<6>::arg()>:
  401b1c:	55                   	push   %rbp
  401b1d:	48 89 e5             	mov    %rsp,%rbp
  401b20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b24:	5d                   	pop    %rbp
  401b25:	c3                   	retq   

0000000000401b26 <boost::arg<7>::arg()>:
  401b26:	55                   	push   %rbp
  401b27:	48 89 e5             	mov    %rsp,%rbp
  401b2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b2e:	5d                   	pop    %rbp
  401b2f:	c3                   	retq   

0000000000401b30 <boost::arg<8>::arg()>:
  401b30:	55                   	push   %rbp
  401b31:	48 89 e5             	mov    %rsp,%rbp
  401b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b38:	5d                   	pop    %rbp
  401b39:	c3                   	retq   

0000000000401b3a <boost::arg<9>::arg()>:
  401b3a:	55                   	push   %rbp
  401b3b:	48 89 e5             	mov    %rsp,%rbp
  401b3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b42:	5d                   	pop    %rbp
  401b43:	c3                   	retq   
  401b44:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b4b:	00 00 00 
  401b4e:	66 90                	xchg   %ax,%ax

0000000000401b50 <__libc_csu_init>:
  401b50:	41 57                	push   %r15
  401b52:	41 89 ff             	mov    %edi,%r15d
  401b55:	41 56                	push   %r14
  401b57:	49 89 f6             	mov    %rsi,%r14
  401b5a:	41 55                	push   %r13
  401b5c:	49 89 d5             	mov    %rdx,%r13
  401b5f:	41 54                	push   %r12
  401b61:	4c 8d 25 40 12 20 00 	lea    0x201240(%rip),%r12        # 602da8 <__frame_dummy_init_array_entry>
  401b68:	55                   	push   %rbp
  401b69:	48 8d 2d 48 12 20 00 	lea    0x201248(%rip),%rbp        # 602db8 <__init_array_end>
  401b70:	53                   	push   %rbx
  401b71:	4c 29 e5             	sub    %r12,%rbp
  401b74:	31 db                	xor    %ebx,%ebx
  401b76:	48 c1 fd 03          	sar    $0x3,%rbp
  401b7a:	48 83 ec 08          	sub    $0x8,%rsp
  401b7e:	e8 2d f5 ff ff       	callq  4010b0 <_init>
  401b83:	48 85 ed             	test   %rbp,%rbp
  401b86:	74 1e                	je     401ba6 <__libc_csu_init+0x56>
  401b88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401b8f:	00 
  401b90:	4c 89 ea             	mov    %r13,%rdx
  401b93:	4c 89 f6             	mov    %r14,%rsi
  401b96:	44 89 ff             	mov    %r15d,%edi
  401b99:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  401b9d:	48 83 c3 01          	add    $0x1,%rbx
  401ba1:	48 39 eb             	cmp    %rbp,%rbx
  401ba4:	75 ea                	jne    401b90 <__libc_csu_init+0x40>
  401ba6:	48 83 c4 08          	add    $0x8,%rsp
  401baa:	5b                   	pop    %rbx
  401bab:	5d                   	pop    %rbp
  401bac:	41 5c                	pop    %r12
  401bae:	41 5d                	pop    %r13
  401bb0:	41 5e                	pop    %r14
  401bb2:	41 5f                	pop    %r15
  401bb4:	c3                   	retq   
  401bb5:	90                   	nop
  401bb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401bbd:	00 00 00 

0000000000401bc0 <__libc_csu_fini>:
  401bc0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000401bc4 <_fini>:
  401bc4:	48 83 ec 08          	sub    $0x8,%rsp
  401bc8:	48 83 c4 08          	add    $0x8,%rsp
  401bcc:	c3                   	retq   
