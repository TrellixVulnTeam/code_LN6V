
libmax.so：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000000520 <_init>:
 520:	48 83 ec 08          	sub    $0x8,%rsp
 524:	48 8b 05 ad 0a 20 00 	mov    0x200aad(%rip),%rax        # 200fd8 <__gmon_start__>
 52b:	48 85 c0             	test   %rax,%rax
 52e:	74 05                	je     535 <_init+0x15>
 530:	e8 1b 00 00 00       	callq  550 <.plt.got>
 535:	48 83 c4 08          	add    $0x8,%rsp
 539:	c3                   	retq   

Disassembly of section .plt:

0000000000000540 <.plt>:
 540:	ff 35 c2 0a 20 00    	pushq  0x200ac2(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>
 546:	ff 25 c4 0a 20 00    	jmpq   *0x200ac4(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>
 54c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000000550 <.plt.got>:
 550:	ff 25 82 0a 20 00    	jmpq   *0x200a82(%rip)        # 200fd8 <__gmon_start__>
 556:	66 90                	xchg   %ax,%ax
 558:	ff 25 9a 0a 20 00    	jmpq   *0x200a9a(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 55e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000560 <deregister_tm_clones>:
 560:	48 8d 05 b8 0a 20 00 	lea    0x200ab8(%rip),%rax        # 20101f <_edata+0x7>
 567:	48 8d 3d aa 0a 20 00 	lea    0x200aaa(%rip),%rdi        # 201018 <_edata>
 56e:	55                   	push   %rbp
 56f:	48 29 f8             	sub    %rdi,%rax
 572:	48 89 e5             	mov    %rsp,%rbp
 575:	48 83 f8 0e          	cmp    $0xe,%rax
 579:	77 02                	ja     57d <deregister_tm_clones+0x1d>
 57b:	5d                   	pop    %rbp
 57c:	c3                   	retq   
 57d:	48 8b 05 64 0a 20 00 	mov    0x200a64(%rip),%rax        # 200fe8 <_ITM_deregisterTMCloneTable>
 584:	48 85 c0             	test   %rax,%rax
 587:	74 f2                	je     57b <deregister_tm_clones+0x1b>
 589:	5d                   	pop    %rbp
 58a:	ff e0                	jmpq   *%rax
 58c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000590 <register_tm_clones>:
 590:	48 8d 05 81 0a 20 00 	lea    0x200a81(%rip),%rax        # 201018 <_edata>
 597:	48 8d 3d 7a 0a 20 00 	lea    0x200a7a(%rip),%rdi        # 201018 <_edata>
 59e:	55                   	push   %rbp
 59f:	48 29 f8             	sub    %rdi,%rax
 5a2:	48 89 e5             	mov    %rsp,%rbp
 5a5:	48 c1 f8 03          	sar    $0x3,%rax
 5a9:	48 89 c2             	mov    %rax,%rdx
 5ac:	48 c1 ea 3f          	shr    $0x3f,%rdx
 5b0:	48 01 d0             	add    %rdx,%rax
 5b3:	48 d1 f8             	sar    %rax
 5b6:	75 02                	jne    5ba <register_tm_clones+0x2a>
 5b8:	5d                   	pop    %rbp
 5b9:	c3                   	retq   
 5ba:	48 8b 15 2f 0a 20 00 	mov    0x200a2f(%rip),%rdx        # 200ff0 <_ITM_registerTMCloneTable>
 5c1:	48 85 d2             	test   %rdx,%rdx
 5c4:	74 f2                	je     5b8 <register_tm_clones+0x28>
 5c6:	5d                   	pop    %rbp
 5c7:	48 89 c6             	mov    %rax,%rsi
 5ca:	ff e2                	jmpq   *%rdx
 5cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005d0 <__do_global_dtors_aux>:
 5d0:	80 3d 41 0a 20 00 00 	cmpb   $0x0,0x200a41(%rip)        # 201018 <_edata>
 5d7:	75 27                	jne    600 <__do_global_dtors_aux+0x30>
 5d9:	48 83 3d 17 0a 20 00 	cmpq   $0x0,0x200a17(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5e0:	00 
 5e1:	55                   	push   %rbp
 5e2:	48 89 e5             	mov    %rsp,%rbp
 5e5:	74 0c                	je     5f3 <__do_global_dtors_aux+0x23>
 5e7:	48 8d 3d 22 08 20 00 	lea    0x200822(%rip),%rdi        # 200e10 <__dso_handle>
 5ee:	e8 65 ff ff ff       	callq  558 <.plt.got+0x8>
 5f3:	e8 68 ff ff ff       	callq  560 <deregister_tm_clones>
 5f8:	5d                   	pop    %rbp
 5f9:	c6 05 18 0a 20 00 01 	movb   $0x1,0x200a18(%rip)        # 201018 <_edata>
 600:	f3 c3                	repz retq 
 602:	0f 1f 40 00          	nopl   0x0(%rax)
 606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 60d:	00 00 00 

0000000000000610 <frame_dummy>:
 610:	48 83 3d f0 07 20 00 	cmpq   $0x0,0x2007f0(%rip)        # 200e08 <__JCR_END__>
 617:	00 
 618:	74 26                	je     640 <frame_dummy+0x30>
 61a:	48 8b 05 bf 09 20 00 	mov    0x2009bf(%rip),%rax        # 200fe0 <_Jv_RegisterClasses>
 621:	48 85 c0             	test   %rax,%rax
 624:	74 1a                	je     640 <frame_dummy+0x30>
 626:	55                   	push   %rbp
 627:	48 8d 3d da 07 20 00 	lea    0x2007da(%rip),%rdi        # 200e08 <__JCR_END__>
 62e:	48 89 e5             	mov    %rsp,%rbp
 631:	ff d0                	callq  *%rax
 633:	5d                   	pop    %rbp
 634:	e9 57 ff ff ff       	jmpq   590 <register_tm_clones>
 639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 640:	e9 4b ff ff ff       	jmpq   590 <register_tm_clones>

0000000000000645 <_Z3maxiii>:
 645:	55                   	push   %rbp
 646:	48 89 e5             	mov    %rsp,%rbp
 649:	89 7d ec             	mov    %edi,-0x14(%rbp)
 64c:	89 75 e8             	mov    %esi,-0x18(%rbp)
 64f:	89 55 e4             	mov    %edx,-0x1c(%rbp)
 652:	8b 45 ec             	mov    -0x14(%rbp),%eax
 655:	89 45 fc             	mov    %eax,-0x4(%rbp)
 658:	8b 45 fc             	mov    -0x4(%rbp),%eax
 65b:	3b 45 e8             	cmp    -0x18(%rbp),%eax
 65e:	7d 05                	jge    665 <_Z3maxiii+0x20>
 660:	8b 45 e8             	mov    -0x18(%rbp),%eax
 663:	eb 03                	jmp    668 <_Z3maxiii+0x23>
 665:	8b 45 fc             	mov    -0x4(%rbp),%eax
 668:	89 45 fc             	mov    %eax,-0x4(%rbp)
 66b:	8b 45 fc             	mov    -0x4(%rbp),%eax
 66e:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
 671:	7d 05                	jge    678 <_Z3maxiii+0x33>
 673:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 676:	eb 03                	jmp    67b <_Z3maxiii+0x36>
 678:	8b 45 fc             	mov    -0x4(%rbp),%eax
 67b:	89 45 fc             	mov    %eax,-0x4(%rbp)
 67e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 685:	00 
 686:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 68a:	c6 00 00             	movb   $0x0,(%rax)
 68d:	8b 45 fc             	mov    -0x4(%rbp),%eax
 690:	5d                   	pop    %rbp
 691:	c3                   	retq   

Disassembly of section .fini:

0000000000000694 <_fini>:
 694:	48 83 ec 08          	sub    $0x8,%rsp
 698:	48 83 c4 08          	add    $0x8,%rsp
 69c:	c3                   	retq   
